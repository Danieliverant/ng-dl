{"version":3,"sources":["../../../projects/numeric-input/src/lib/locale.tokens.ts","../../../projects/numeric-input/src/lib/locale.service.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/numeric-input/src/lib/numeric-input.utils.ts","../../../projects/numeric-input/src/lib/numeric-input.directive.ts","../../../projects/numeric-input/src/lib/numeric-input.module.ts"],"names":["NUMERIC_INPUT_LOCALE","InjectionToken","LocaleService","locales","this","prototype","getDecimalSeparators","_this","getLocales","options","useGrouping","map","locale","localizedToDecimalSeparator","localizeDecimal","getThousandSeparators","localizedToThousandSeparator","localizeNumber","value","toLocaleString","localizedParts","find","part","type","Intl","NumberFormat","formatToParts","Object","defineProperty","navigator","languages","language","supportedLocalesOf","_a","localeFromBrowser","Injectable","args","providedIn","Inject","Optional","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","error","__spread","arguments","length","concat","UNSIGNED_INTEGER_REGEX","SIGNED_DOUBLE_REGEX","NUMBERS_REGEX","DEFAULT_ACTION_KEYS","DEFAULT_ALLOWED_KEYS","getFormattedValue","decimalSeparator","thousandsSeparator","formatted","Number","thousandSeparator","replace","removeThousandsSeparator","charAt","appendZeroToDecimal","separator","replaceDecimalSeparator","RegExp","test","toString","parseValue","isNaN","isAllowedKey","decimalSeparators","key","getKeyName","allowedKeys","originalValue","target","cursorPosition","selectionStart","signExists","includes","separatorExists","some","apply","firstCharacterIsSeparator","getAllowedKeys","ctrlKey","metaKey","isActionKey","isNumberKey","keyCode","String","fromCharCode","mapKeyCodeToKeyName","NumericInputDirective","hostElement","localeService","control","localized","EventEmitter","thousandSeparators","destroy$","Subject","ngAfterViewInit","input","el","setAttribute","removeAttribute","onKeyDown","onFormSubmit","onValueChange","ngOnDestroy","setValue","formattedValue","emit","patchValue","onChange","fromEvent","pipe","onPaste","tap","preventDefault","clipboardData","getData","onDrop","dataTransfer","takeUntil","setCustomValidity","subscribe","form","min","max","CHROME_MIN_VALIDATION_MESSAGE","CHROME_MAX_VALIDATION_MESSAGE","reportValidity","merge","nativeElement","Directive","selector","ElementRef","NgControl","decorators","Input","Output","NgModule","declarations","imports","exports"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const NUMERIC_INPUT_LOCALE: InjectionToken<string | string[]> = new InjectionToken<string | string[]>(\n  'NUMERIC_INPUT_LOCALE'\n);\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { NUMERIC_INPUT_LOCALE } from './locale.tokens';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocaleService {\n\n  constructor(@Inject(NUMERIC_INPUT_LOCALE) @Optional() private locales?: string | string[]) { }\n\n  public getDecimalSeparators(): string[] {\n    const locales = this.getLocales();\n    const options: Intl.NumberFormatOptions = { useGrouping: false };\n    return locales.map(locale => this.localizedToDecimalSeparator(this.localizeDecimal(1.1, locale, options)));\n  }\n\n  public getThousandSeparators(): string[] {\n    const locales = this.getLocales();\n    const options: Intl.NumberFormatOptions = { useGrouping: true };\n    return locales.map(locale => this.localizedToThousandSeparator(this.localizeDecimal(1234.5, locale, options)));\n  }\n\n  public localizeNumber(value: number): string {\n    return value.toLocaleString(this.getLocales());\n  }\n\n  private localizedToDecimalSeparator(localizedParts: Intl.NumberFormatPart[]): string {\n    return localizedParts.find(part => part.type === 'decimal').value;\n  }\n\n  private localizedToThousandSeparator(localizedParts: Intl.NumberFormatPart[]): string {\n    return localizedParts.find(part => part.type === 'group').value;\n  }\n\n  private localizeDecimal(value: number, locale: string, options?: Intl.NumberFormatOptions): Intl.NumberFormatPart[] {\n    return Intl.NumberFormat(locale, options).formatToParts(value);\n  }\n\n  private get localeFromBrowser(): string {\n    return navigator.languages ? navigator.languages[0] : navigator.language;\n  }\n\n  private getLocales(): string[] {\n    try {\n      const supportedLocales: string[] = Intl.NumberFormat.supportedLocalesOf(this.locales);\n      return supportedLocales;\n    } catch {\n      return [this.localeFromBrowser];\n    }\n  }\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","const UNSIGNED_INTEGER_REGEX = '^[0-9]*$';\nconst SIGNED_DOUBLE_REGEX = '^-?[0-9]+(.[0-9]+)?$';\nconst NUMBERS_REGEX = /\\d/g;\nconst CHROME_MIN_VALIDATION_MESSAGE = 'Value must be greater than or equal to';\nconst CHROME_MAX_VALIDATION_MESSAGE = 'Value must be less than or equal to';\nconst DEFAULT_NUMERIC_VALUE = 0;\nconst DEFAULT_ACTION_KEYS = ['a', 'c', 'v', 'x'];\nconst DEFAULT_ALLOWED_KEYS = [\n  'Backspace',\n  'ArrowLeft',\n  'ArrowRight',\n  'Escape',\n  'Tab',\n];\n\n\n/**\n * Override input attributes for validation and mobile support.\n * @param input - input element\n */\nexport function overrideInputType(input: HTMLInputElement): void {\n  input.setAttribute('type', 'text');\n  input.setAttribute('inputmode', 'decimal');\n  input.removeAttribute('pattern');\n}\n\n/**\n * Get formatted value, if the value is a valid numeric value it will be formatted if not a default value will be returned.\n * @param value - value to format.\n * @param decimalSeparator - decimal separator to replace (if needed).\n * @param thousandsSeparator - thousands separator to remove (if needed).\n */\nexport function getFormattedValue(\n  value: string,\n  decimalSeparator: string,\n  thousandsSeparator: string\n): number {\n  const formatted = Number(\n    parseValue(value, decimalSeparator, thousandsSeparator).replace(decimalSeparator, '.')\n  );\n  return isNaN(formatted) ? DEFAULT_NUMERIC_VALUE : formatted;\n}\n\n/**\n * Check if the pressed key is allowed in the numeric input field.\n * @param e - keyboard event.\n * @param decimalSeparators - array of supported separators.\n */\nexport function isAllowedKey(\n  e: KeyboardEvent,\n  decimalSeparators: string[]\n): boolean {\n  const key: string = getKeyName(e);\n  const allowedKeys = getAllowedKeys(e, decimalSeparators);\n  return (\n    allowedKeys.includes(key) ||\n    (DEFAULT_ACTION_KEYS.includes(key) && isActionKey(e)) ||\n    isNumberKey(e)\n  );\n}\n\n/**\n * Align all browsers to validate as same as Chrome browser does.\n * Validation will be after the field loose focus and with Chrome default messages.\n * @param el - input element.\n * @param value - input value.\n * @param min - minimum valid value.\n * @param max - maximum valid value.\n */\nexport function validate(\n  el: HTMLInputElement,\n  value: number,\n  min?: number,\n  max?: number\n): boolean {\n  if (value < min) {\n    el.setCustomValidity(`${CHROME_MIN_VALIDATION_MESSAGE} ${min}.`);\n    return false;\n  }\n\n  if (value > max) {\n    el.setCustomValidity(`${CHROME_MAX_VALIDATION_MESSAGE} ${max}.`);\n    return false;\n  }\n\n  el.setCustomValidity('');\n  return true;\n}\n\n/**\n * support for old browsers.\n */\nfunction mapKeyCodeToKeyName(keyCode: number): string {\n  if (keyCode && String.fromCharCode) {\n    switch (keyCode) {\n      case 8:\n        return 'Backspace';\n      case 9:\n        return 'Tab';\n      case 27:\n        return 'Escape';\n      case 37:\n        return 'ArrowLeft';\n      case 39:\n        return 'ArrowRight';\n      case 188:\n        return ',';\n      case 190:\n        return '.';\n      case 109:\n      case 173:\n      case 189:\n        return '-';\n      default:\n        return String.fromCharCode(keyCode);\n    }\n  }\n  return '';\n}\n\n/**\n * Add zero to decimal values, replaces the decimal separator and remove the thousand separator.\n * If the value is a numeric value the parsed value will be returned, if not - the default numeric value.\n * @param value - value to parse.\n * @param decimalSeparator - decimal separator to replace (if needed).\n * @param thousandsSeparator - thousands separator to remove (if needed).\n */\nfunction parseValue(value: string, decimalSeparator: string, thousandSeparator: string): string {\n  value = replaceDecimalSeparator(value, decimalSeparator);\n  value = appendZeroToDecimal(value, decimalSeparator);\n  value = removeThousandsSeparator(value, thousandSeparator);\n  const isValid: boolean = new RegExp(SIGNED_DOUBLE_REGEX).test(value);\n  return isValid ? value : DEFAULT_NUMERIC_VALUE.toString();\n}\n\nfunction replaceDecimalSeparator(value: string, decimalSeparator: string): string {\n  const separator = value.replace('-', '').replace(NUMBERS_REGEX, '');\n  return value.replace(separator || decimalSeparator, decimalSeparator);\n}\n\nfunction appendZeroToDecimal(value: string, decimalSeparator: string): string {\n  const firstCharacter = value.charAt(0);\n  if (firstCharacter === decimalSeparator) {\n    return 0 + value;\n  }\n\n  const lastCharacter = value.charAt(value.length - 1);\n  if (lastCharacter === decimalSeparator) {\n    return value + 0;\n  }\n\n  return value;\n}\n\nfunction removeThousandsSeparator(value: string, thousandsSeparator: string): string {\n  return value.replace(thousandsSeparator, '');\n}\n\nfunction isActionKey(e: KeyboardEvent): boolean {\n  return e.ctrlKey || e.metaKey;\n}\n\nfunction getKeyName(e: KeyboardEvent): string {\n  return e.key || mapKeyCodeToKeyName(e.keyCode);\n}\n\nfunction isNumberKey(e: KeyboardEvent): boolean {\n  const key = getKeyName(e);\n  return new RegExp(UNSIGNED_INTEGER_REGEX).test(key);\n}\n\nfunction getAllowedKeys(\n  e: KeyboardEvent,\n  decimalSeparators: string[]\n): string[] {\n  const allowedKeys = [...DEFAULT_ALLOWED_KEYS];\n  const originalValue: string = (e.target as HTMLInputElement).value;\n  const cursorPosition: number =\n    (e.target as HTMLInputElement).selectionStart || 0;\n  const signExists = originalValue.includes('-');\n  const separatorExists = decimalSeparators.some((separator) =>\n    originalValue.includes(separator)\n  );\n\n  const separatorIsCloseToSign = signExists && cursorPosition <= 1;\n  if (!separatorIsCloseToSign && !separatorExists) {\n    allowedKeys.push(...decimalSeparators);\n  }\n\n  const firstCharacterIsSeparator = decimalSeparators.some(\n    (separator) => originalValue.charAt(0) === separator\n  );\n\n  if (!signExists && !firstCharacterIsSeparator && cursorPosition === 0) {\n    allowedKeys.push('-');\n  }\n\n  return allowedKeys;\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { fromEvent, merge, Observable, Subject } from 'rxjs';\nimport { map, takeUntil, tap } from 'rxjs/operators';\nimport { LocaleService } from './locale.service';\nimport {\n  getFormattedValue,\n  isAllowedKey,\n  overrideInputType,\n  validate,\n} from './numeric-input.utils';\n\n@Directive({\n  selector: '[dlNumericInput]',\n})\nexport class NumericInputDirective implements AfterViewInit, OnDestroy {\n  @Input() min: number;\n  @Input() max: number;\n  @Output() localized = new EventEmitter<string>();\n\n  private readonly decimalSeparators = this.localeService.getDecimalSeparators();\n  private readonly thousandSeparators = this.localeService.getThousandSeparators();\n  private readonly destroy$ = new Subject();\n\n  constructor(\n    private hostElement: ElementRef,\n    private localeService: LocaleService,\n    @Optional() private control?: NgControl\n  ) {}\n\n  ngAfterViewInit(): void {\n    overrideInputType(this.el);\n    this.onKeyDown();\n    this.onFormSubmit();\n    this.onValueChange();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n  }\n\n  private setValue(value: string): void {\n    const formattedValue = getFormattedValue(value, this.decimalSeparator, this.thousandsSeparator);\n    this.localized.emit(this.localeService.localizeNumber(formattedValue));\n    this.el.value = formattedValue.toString();\n    if (this.control) {\n      this.control.control?.patchValue(formattedValue);\n    }\n  }\n\n  private onChange(): Observable<string> {\n    return fromEvent(this.el, 'change').pipe(map(() => this.el.value));\n  }\n\n  private onPaste(): Observable<string> {\n    return fromEvent(this.el, 'paste').pipe(\n      tap((e: ClipboardEvent) => e.preventDefault()),\n      map((e: ClipboardEvent) => e.clipboardData?.getData('text/plain') || '')\n    );\n  }\n\n  private onDrop(): Observable<string> {\n    return fromEvent(this.el, 'drop').pipe(\n      tap((e: DragEvent) => e.preventDefault()),\n      map((e: DragEvent) => e.dataTransfer?.getData('text') || '')\n    );\n  }\n\n  private onKeyDown(): void {\n    fromEvent(this.el, 'keydown')\n      .pipe(\n        takeUntil(this.destroy$),\n        tap((e: KeyboardEvent) => {\n          this.el.setCustomValidity('');\n          if (isAllowedKey(e, this.decimalSeparators)) {\n            return;\n          }\n          e.preventDefault();\n        })\n      )\n      .subscribe();\n  }\n\n  private onFormSubmit(): void {\n    fromEvent(this.el.form, 'submit')\n      .pipe(\n        takeUntil(this.destroy$),\n        tap((e) => {\n          const formattedValue = getFormattedValue(\n            this.el.value,\n            this.decimalSeparator,\n            this.thousandsSeparator\n          );\n          const isValid = validate(this.el, formattedValue, this.min, this.max);\n          if (!isValid) {\n            e.preventDefault();\n            this.el.reportValidity();\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  private onValueChange(): void {\n    merge(this.onChange(), this.onDrop(), this.onPaste())\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((value) => this.setValue(value));\n  }\n\n  private get el(): HTMLInputElement {\n    return this.hostElement.nativeElement;\n  }\n\n  private get decimalSeparator(): string {\n    return this.decimalSeparators[0];\n  }\n\n  private get thousandsSeparator(): string {\n    return this.thousandSeparators[0];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NumericInputDirective } from './numeric-input.directive';\n\n@NgModule({\n  declarations: [NumericInputDirective],\n  imports: [\n  ],\n  exports: [NumericInputDirective]\n})\nexport class NumericInputModule { }\n"]}