{"version":3,"sources":["../../../projects/delayed-dragover/src/lib/delayed-dragover.component.ts","../../../projects/delayed-dragover/src/lib/delayed-dragover.directive.ts","../../../projects/delayed-dragover/src/lib/delayed-dragover.module.ts"],"names":["DEFAULT_TEXT","DelayedDragoverComponent","this","text","prototype","changeText","changePreText","resetText","Component","args","selector","template","DelayedDragoverDirective","element","delay","delayStep","dragoverDelayed","EventEmitter","preDragoverDelayed","dragoverCounter","Object","defineProperty","_class","value","ngOnInit","_this","hide$","fromEvent","nativeElement","pipe","tap","_","show$","merge","classList","remove","class","switchMap","timer","add","emit","EMPTY","subscribe","Directive","ElementRef","Input","Output","NgModule","declarations","imports","exports"],"mappings":"6cAEA,IAAMA,EAAe,wBAErB,SAAAC,IAWEC,KAAAC,KAAOH,SAEPC,EAAAG,UAAAC,WAAA,WACEH,KAAKC,MAAQ,0BAGfF,EAAAG,UAAAE,cAAA,WACEJ,KAAKK,YACLL,KAAKC,MAAQ,8BAGfF,EAAAG,UAAAG,UAAA,WACEL,KAAKC,KAAOH,4BAvBfQ,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,sBACVC,SAAU,uaCFZ,iBA4CE,SAAAC,EAA6BC,GAAAX,KAAAW,QAAAA,EApBHX,KAAAY,MAvBN,IA6BUZ,KAAAa,UAAY,EAChCb,KAAAc,gBAAkB,IAAIC,EAAAA,aAMtBf,KAAAgB,mBAAqB,IAAID,EAAAA,aAK3Bf,KAAAiB,gBAAkB,SA7B1BC,OAAAC,eACIT,EAAAR,UAAA,QAAK,KAIT,WACE,OAAOF,KAAKoB,YANd,SACUC,GACRrB,KAAKoB,OAASC,GAfc,6CA+C9BX,EAAAR,UAAAoB,SAAA,WAAA,IAAAC,EAAAvB,KACQwB,EAAQC,EAAAA,UAAUzB,KAAKW,QAAQe,cAAe,aAAaC,KAAKC,EAAAA,KAAI,SAAAC,GAAK,OAAAN,EAAKN,sBAC9Ea,EAAQL,EAAAA,UAAUzB,KAAKW,QAAQe,cAAe,aAAaC,KAAKC,EAAAA,KAAI,SAAAC,GAAK,OAAAN,EAAKN,sBAEpFc,EAAAA,MAAMP,EAAOM,GACVH,KACCC,EAAAA,KAAI,WAAM,OAAAL,EAAKZ,QAAQe,cAAcM,UAAUC,OAAOV,EAAKW,UAC3DC,EAAAA,WAAU,SAAAN,GACR,OAAIN,EAAKN,gBAAkB,EAClBmB,EAAAA,MAAMb,EAAKX,OAAOe,KACvBC,EAAAA,KAAI,WAAM,OAAAL,EAAKZ,QAAQe,cAAcM,UAAUK,IAAId,EAAKW,UACxDN,EAAAA,KAAI,WAAM,OAAAL,EAAKV,WAAaU,EAAKP,mBAAmBsB,UACpD1B,EAAAA,MAAMW,EAAKV,YAGR0B,EAAAA,UAGVC,UAAUxC,KAAKc,2CA3DrB2B,EAAAA,UAASlC,KAAA,CAAC,CACTC,SAAU,mEAXQkC,EAAAA,6CAiBjBC,EAAAA,MAAKpC,KAAA,CAAC,6BAWNoC,EAAAA,MAAKpC,KAAA,CAAC,sCAMNoC,EAAAA,MAAKpC,KAAA,CAAC,gDACNqC,EAAAA,mCAMAA,EAAAA,gBChCH,iCALCC,EAAAA,SAAQtC,KAAA,CAAC,CACRuC,aAAc,CAAC/C,EAA0BW,GACzCqC,QAAS,GACTC,QAAS,CAACjD,EAA0BW","sourcesContent":["import { Component } from '@angular/core';\n\nconst DEFAULT_TEXT = 'Hover Me';\n\n@Component({\n  selector: 'dl-delayed-dragover',\n  template: `\n    <h3>Dragover for 1 second</h3>\n    <div dlDelayedDragover (dragoverDelayed)=\"changeText()\" (dragleave)=\"resetText()\">{{ text }}</div>\n    <h3>Dragover for 2 seconds see the pre-delayed and another second for the delay</h3>\n    <div dlDelayedDragover [dlDragoverDelayStep]=\"2000\" (preDragoverDelayed)=\"changePreText()\"\n         (dragoverDelayed)=\"changeText()\" (dragleave)=\"resetText()\">{{ text }}</div>\n  `\n})\nexport class DelayedDragoverComponent {\n  text = DEFAULT_TEXT;\n\n  changeText(): void {\n    this.text += ' - Hovered With Delay!';\n  }\n\n  changePreText(): void {\n    this.resetText();\n    this.text += ' - Hovered With Pre Delay!';\n  }\n\n  resetText(): void {\n    this.text = DEFAULT_TEXT;\n  }\n}\n","import { Directive, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { EMPTY, fromEvent, merge, timer } from 'rxjs';\nimport { delay, switchMap, tap } from 'rxjs/operators';\n\nconst DEFAULT_DRAG_OVER_CLASS = 'drag-over';\nconst DEFAULT_DELAY = 1000;\n\n/**\n * Delays the dragover event.\n */\n@Directive({\n  selector: '[dlDelayedDragover]'\n})\nexport class DelayedDragoverDirective implements OnInit {\n  // tslint:disable-next-line:variable-name\n  static ngAcceptInputType_paypoDragOver: string;\n\n  @Input('dlDragover')\n  set class(value: string) {\n    this._class = value || DEFAULT_DRAG_OVER_CLASS;\n  }\n\n  get class(): string {\n    return this._class;\n  }\n\n  private _class: string;\n\n  @Input('dlDragoverDelay') delay = DEFAULT_DELAY;\n  /**\n   * Delay before the dlDragoverDelay.\n   * Useful for letting the user change his mind after the first delay -\n   * i.e. hovering over paginator -> page number changes color -> page changes.\n   */\n  @Input('dlDragoverDelayStep') delayStep = 0;\n  @Output() dragoverDelayed = new EventEmitter();\n  /**\n   * Emits if dlDragoverDelayStep is in use.\n   * Useful for letting the user change his mind after the first delay -\n   * i.e. hovering over paginator -> (preDragoverDelayed emits) page number changes color -> page changes.\n   */\n  @Output() preDragoverDelayed = new EventEmitter();\n\n  // using counter to fix these issues:\n  // https://stackoverflow.com/questions/7110353/html5-dragleave-fired-when-hovering-a-child-element\n  // https://stackoverflow.com/questions/14203734/dragend-dragenter-and-dragleave-firing-off-immediately-when-i-drag\n  private dragoverCounter = 0;\n\n  constructor(private readonly element: ElementRef<HTMLElement>) {\n  }\n\n  ngOnInit(): void {\n    const hide$ = fromEvent(this.element.nativeElement, 'dragleave').pipe(tap(_ => this.dragoverCounter--));\n    const show$ = fromEvent(this.element.nativeElement, 'dragenter').pipe(tap(_ => this.dragoverCounter++));\n\n    merge(hide$, show$)\n      .pipe(\n        tap(() => this.element.nativeElement.classList.remove(this.class)),\n        switchMap(_ => {\n          if (this.dragoverCounter > 0) {\n            return timer(this.delay).pipe(\n              tap(() => this.element.nativeElement.classList.add(this.class)),\n              tap(() => this.delayStep && this.preDragoverDelayed.emit()),\n              delay(this.delayStep)\n            );\n          }\n          return EMPTY;\n        })\n      )\n      .subscribe(this.dragoverDelayed);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DelayedDragoverComponent } from './delayed-dragover.component';\nimport { DelayedDragoverDirective } from './delayed-dragover.directive';\n\n@NgModule({\n  declarations: [DelayedDragoverComponent, DelayedDragoverDirective],\n  imports: [],\n  exports: [DelayedDragoverComponent, DelayedDragoverDirective]\n})\nexport class DelayedDragoverModule {\n}\n"]}